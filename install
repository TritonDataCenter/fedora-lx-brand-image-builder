#!/usr/bin/env bash
#
# Copyright (c) 2015 Joyent Inc., All rights reserved.
#
# Install Fedora into a directory, modify the installation, then tar it up.
#

set -euo pipefail
IFS=$'\n\t'

GUESTTOOLS=guesttools
BUILD_DATE=$(date +%Y%m%d)

usage() {
cat <<EOF

Install and modify Fedora in a given directory in a given directory using a given mirror

Usage:
  $0 -d <INSTALL_DIR> -m <MIRROR> -r <RELEASE_PACKAGE> -i <IMAGE_NAME> -p <NAME> -D <DESC> -u <DOCS>

Example:
  $0 -d /data/chroot -m http://fedora.bhs.mirrors.ovh.net/linux/releases/22/Server/x86_64/os/Packages/f -r fedora-release-server-22-1.noarch.rpm -i fedora-22 -p "Fedora 22 LX Brand" -D "Fedora 64-bit lx-brand image." -u https://docs.joyent.com/images/lx-brand-beta

OPTIONS:
  -d A path to the install directory
  -m A URL for the desired archive mirror
  -r The release package used for installing Fedora
  -i The name of the image. This is used for naming the tarball. 
  -p The proper name of the image. Use quotes. This is used in the MOTD and /etc/product file.
  -D A description for the image. This is used in the image manifest and the /etc/product file.
  -u A URL to the image docs [optional]
  -h Show this message

EOF
}

INSTALL_DIR=
MIRROR=
RELEASE_PACKAGE=
IMAGE_NAME=
NAME=
DESC=
DOCS=

while getopts "hd:m:r:i:p:D:u:" OPTION
do
  case $OPTION in
    h)
      usage
      exit
      ;;
    d)
      INSTALL_DIR=${OPTARG%/}
      ;;
    m)
      MIRROR=${OPTARG}
      ;;
    r)
      RELEASE_PACKAGE=${OPTARG}
      ;;
    i)
      IMAGE_NAME=${OPTARG}
      ;;
    p)
      NAME=${OPTARG}
      ;;
    D)
      DESC=${OPTARG}
      ;;
    u)
      DOCS=${OPTARG}
      ;;
    \?)
      usage
      exit
      ;;
  esac
done

if [[ $# -eq 0 ]]; then
  usage
  exit 1
fi

if [[ ! -e ${INSTALL_DIR} ]] ; then
  echo "Directory $INSTALL_DIR not found"
  exit 1
fi

if [[ -z ${INSTALL_DIR} ]]; then
  echo "Error: missing install directory (-d) value"
  exit 1
fi

if [[ -z ${MIRROR} ]]; then
  echo "Error: missing mirror (-m) value"
  exit 1
fi

if [[ -z ${RELEASE_PACKAGE} ]]; then
  echo "Error: missing release package (-r) value"
  exit 1
fi

if [[ -z ${IMAGE_NAME} ]]; then
  echo "Error: missing image name (-i) value"
  exit 1
fi

if [[ -z ${NAME} ]]; then
  echo "Error: missing proper name (-p) value"
  exit 1
fi

if [[ -z ${DESC} ]]; then
  echo "Error: missing image description (-D) value"
  exit 1
fi

TARGET="${IMAGE_NAME}-${BUILD_DATE}.tar.gz"

if [[ -z ${DOCS} ]]; then
  DOCS="https://docs.joyent.com/images/lx-brand-beta"
fi

echo "==> Installing Fedora into $INSTALL_DIR"

if [[ -d $INSTALL_DIR ]]; then
  echo "====> Found previous chroot. Deleting and creating a new one."
  rm -rf $INSTALL_DIR
  mkdir -p $INSTALL_DIR
  mkdir -p $INSTALL_DIR/var/lib/rpm
fi

rpm --rebuilddb --root=$INSTALL_DIR

echo "==> Getting $RELEASE_PACKAGE..."
wget -O /var/tmp/$RELEASE_PACKAGE $MIRROR/$RELEASE_PACKAGE

echo "==> Verifying $RELEASE_PACKAGE..."

# Check if we already imported the signing key: https://getfedora.org/keys/
# pub  4096R/8E1431D5 2014-07-09 Fedora (22) <fedora@fedoraproject.org>
#  Key fingerprint = C527 EA07 A934 9B58 9C35 E1BF 11AD C094 8E14 31D5
#
# pub  4096R/A29CB19C 2014-07-09 Fedora Secondary (22) <fedora@fedoraproject.org>
#  Key fingerprint = B467 FA46 E2CE 5FAC 3499 10C2 D8D1 FA8C A29C B19C
set +e 
rpm -qa | grep -i gpg | grep 8e1431d5 > /dev/null
if [[ $? -gt 0 ]]; then
    echo "Adding gpg signing keys 4096R/8E1431D5"
    curl -SLO https://getfedora.org/static/8E1431D5.txt
    rpm --import 8E1431D5.txt
fi

gpg --list-keys | grep a29cb19c > /dev/null
if [[ $? -gt 0 ]]; then
    echo "Adding gpg signing keys 4096R/A29CB19C"
    curl -SLO https://getfedora.org/static/A29CB19C.txt
    rpm --import A29CB19C.txt
fi
set -e

rpm -K /var/tmp/$RELEASE_PACKAGE

echo "==> Installing rpm package..."
rpm -i --root=$INSTALL_DIR --nodeps /var/tmp/$RELEASE_PACKAGE

echo "==> Installing @core packages..."
yum --installroot=$INSTALL_DIR --setopt=tsflags=nodocs \
    --setopt=group_package_types=mandatory -y groupinstall core

echo "==> Installing additional packages..."
yum --installroot=$INSTALL_DIR --setopt=tsflags=nodocs install -y less man openssh-clients sudo vim-minimal which wget

echo "==> Cleaning up yum cache..."
yum --installroot=$INSTALL_DIR clean all

echo "==> Removing /var/tmp/$RELEASE_PACKAGE"
rm -rf /var/tmp/$RELEASE_PACKAGE

echo "==> Setting TZ to UTC"
if [[ -f $INSTALL_DIR/etc/localtime ]]; then
  rm $INSTALL_DIR/etc/localtime
fi

cp $INSTALL_DIR/usr/share/zoneinfo/UTC $INSTALL_DIR/etc/localtime

echo "==> Disabling PasswordAuthentication"
sed s/PasswordAuthentication\ yes/PasswordAuthentication\ no/ -i $INSTALL_DIR/etc/ssh/sshd_config

echo "==> Creating /etc/motd"
cat << MOTD > $INSTALL_DIR/etc/motd
   __        .                   .
 _|  |_      | .-. .  . .-. :--. |-
|_    _|     ;|   ||  |(.-' |  | |
  |__|   \`--'  \`-' \`;-| \`-' '  ' \`-'
                   /  ;  Instance ($NAME $BUILD_DATE)
                   \`-'   $DOCS

MOTD

echo "==> Creating /etc/product file"
cat << PRODUCT > $INSTALL_DIR/etc/product
Name: Joyent Instance
Image: $NAME $BUILD_DATE
Documentation: $DOCS
Description: $DESC
PRODUCT

echo "==> Installing Guest tools in $INSTALL_DIR"
echo "====> Initiallizing and fetching submodule $GUESTTOOLS"
git submodule init
git submodule update
echo "====> Running ./install.sh -i $INSTALL_DIR"
cd $GUESTTOOLS
./install.sh -i $INSTALL_DIR
cd ..

echo "==> Saving installation as $TARGET. This may take a few minutes."
tar czf $TARGET --exclude-from=exclude.txt $INSTALL_DIR/

echo "==> Installation complete!"
echo "==> $TARGET"

exit 0
