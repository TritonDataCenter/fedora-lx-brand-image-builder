#!/usr/bin/env bash
#
# Copyright (c) 2015 Joyent Inc., All rights reserved.
#
# Install Fedora into a directory, modify the installation, then tar it up.
#

if [[ -n "$TRACE" ]]; then
  export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
  set -o xtrace
fi

set -euo pipefail
IFS=$'\n\t'

GUESTTOOLS=guesttools
BUILD_DATE=$(date +%Y%m%d)

usage() {
cat <<EOF

Install and modify Fedora in a given directory in a given directory using a given mirror

Usage:
	$0 -d <INSTALL_DIR> -m <MIRROR> -R <RELEASE> -r <RELEASE_PACKAGE> -i <IMAGE_NAME> -p <NAME> -D <DESC> -u <DOCS>

Example:
	$0 -d /data/chroot -m http://fedora.bhs.mirrors.ovh.net/linux/releases/22/Server/x86_64/os/Packages/f -r fedora-release-22-1.noarch.rpm -i fedora-22 -p "Fedora 22 LX Brand" -D "Fedora 64-bit lx-brand image." -u https://docs.joyent.com/images/container-native-linux

OPTIONS:
	-d A path to the install directory
	-m A URL for the desired archive mirror
	-R The release of Fedora (e.g. 22)
	-r The release package used for installing Fedora
	-i The name of the image. This is used for naming the tarball.
	-p The proper name of the image. Use quotes. This is used in the MOTD and /etc/product file.
	-D A description for the image. This is used in the image manifest and the /etc/product file.
	-u A URL to the image docs [optional]
	-h Show this message

EOF
}

INSTALL_DIR=
MIRROR=
RELEASE=
RELEASE_PACKAGE=
IMAGE_NAME=
NAME=
DESC=
DOCS=

while getopts "hd:m:R:r:i:p:D:u:" OPTION
do
	case $OPTION in
		h)
			usage
			exit
			;;
		d)
			INSTALL_DIR=${OPTARG%/}
			;;
		m)
			MIRROR=${OPTARG}
			;;
		R)
			RELEASE=${OPTARG}
			;;
		r)
			RELEASE_PACKAGE=${OPTARG}
			;;
		i)
			IMAGE_NAME=${OPTARG}
			;;
		p)
			NAME=${OPTARG}
			;;
		D)
			DESC=${OPTARG}
			;;
		u)
			DOCS=${OPTARG}
			;;
		\?)
			usage
			exit
			;;
	esac
done

if [[ $# -eq 0 ]]; then
	usage
	exit 1
fi

if [[ ! -e ${INSTALL_DIR} ]] ; then
	echo "Directory $INSTALL_DIR not found"
	exit 1
fi

if [[ -z ${INSTALL_DIR} ]]; then
	echo "Error: missing install directory (-d) value"
	exit 1
fi

if [[ -z ${MIRROR} ]]; then
	echo "Error: missing mirror (-m) value"
	exit 1
fi

if [[ -z ${RELEASE} ]]; then
	echo "Error: missing release (-R) value"
	exit 1
fi

if [[ -z ${RELEASE_PACKAGE} ]]; then
	echo "Error: missing release package (-r) value"
	exit 1
fi

if [[ -z ${IMAGE_NAME} ]]; then
	echo "Error: missing image name (-i) value"
	exit 1
fi

if [[ -z ${NAME} ]]; then
	echo "Error: missing proper name (-p) value"
	exit 1
fi

if [[ -z ${DESC} ]]; then
	echo "Error: missing image description (-D) value"
	exit 1
fi

TARGET="${IMAGE_NAME}-${BUILD_DATE}.tar.gz"

if [[ -z ${DOCS} ]]; then
	DOCS="https://docs.joyent.com/images/container-native-linux"
fi

echo "==> Installing Fedora into $INSTALL_DIR"

if [[ -d $INSTALL_DIR ]]; then
	echo "====> Found previous chroot. Deleting and creating a new one."
	rm -rf $INSTALL_DIR
	mkdir -p $INSTALL_DIR
	mkdir -p $INSTALL_DIR/var/lib/rpm
fi

rpm --root=$INSTALL_DIR --initdb

echo "==> Getting $RELEASE_PACKAGE..."
curl -sSo /var/tmp/$RELEASE_PACKAGE $MIRROR/$RELEASE_PACKAGE

echo "==> Verifying $RELEASE_PACKAGE..."

# Check if we already imported the signing key: https://getfedora.org/keys/
#
# pub  4096R/81B46521 2015-07-25 Fedora (24) <fedora-24-primary@fedoraproject.org>
#  Key fingerprint = 5048 BDBB A5E7 76E5 47B0 9CCC 73BD E983 81B4 6521
#
# pub  4096R/FDB19C98 2016-03-31 Fedora (25) <fedora-25-primary@fedoraproject.org>
#  Key fingerprint = C437 DCCD 558A 66A3 7D6F 4372 4089 D8F2 FDB1 9C98
#
# pub  4096R/64DAB85D 2016-09-09 Fedora (26) <fedora-26-primary@fedoraproject.org>
#  Key fingerprint = E641 850B 77DF 4353 78D1 D7E2 812A 6B4B 64DA B85D

set +e
KEYS=( 81B46521 FDB19C98 64DAB85D )

for KEY in "${KEYS[@]}"; do
	# ${VAR_NAME,,} converts to lowercase
	rpm -qi gpg-pubkey-${KEY,,} > /dev/null
	if [[ $? -gt 0 ]]; then
		echo "===> Adding gpg signing keys $KEY"
		curl -sSLO https://getfedora.org/static/$KEY.txt
		rpm --import $KEY.txt
		rm -rf $KEY.txt
	fi
done
set -e

rpm -K /var/tmp/$RELEASE_PACKAGE

echo "==> Installing $RELEASE_PACKAGE..."
dnf --installroot=$INSTALL_DIR --releasever=$RELEASE install -y /var/tmp/$RELEASE_PACKAGE

echo "==> Installing Fedora Server Edition group..."
dnf --installroot=$INSTALL_DIR \
	--setopt=group_package_types=default,mandatory \
	--exclude=abrt-addon* \
	--exclude=abrt-cli \
	--exclude=chrony \
	--exclude=dracut-config-rescue \
	--exclude=kernel-devel \
	--exclude=kernel-headers \
	--exclude=plymouth* \
	group -y install "Fedora Server Edition"

echo "==> Installing additional packages..."
dnf --installroot=$INSTALL_DIR install -y gettext vim-enhanced

echo "==> Updating packages..."
dnf --installroot=$INSTALL_DIR -y update

echo "==> Cleaning up dnf cache..."
dnf --installroot=$INSTALL_DIR clean all

echo "==> Removing /var/tmp/$RELEASE_PACKAGE"
rm -rf /var/tmp/$RELEASE_PACKAGE

echo "==> Setting TZ to UTC"
if [[ -f $INSTALL_DIR/etc/localtime ]]; then
	rm $INSTALL_DIR/etc/localtime
fi

cp $INSTALL_DIR/usr/share/zoneinfo/UTC $INSTALL_DIR/etc/localtime

echo "==> Setting locale to en_US.UTF-8"
echo "LANG=\"en_US.UTF-8\"" > $INSTALL_DIR/etc/locale.conf

# Systemd overrides for systemd-timedated and systemd-hostnamed
#
# See:
# 	- https://github.com/joyent/centos-lx-brand-image-builder/issues/5
# 	- https://smartos.org/bugview/OS-5304
#
# TODO: This should be removed when the relevant cgroup etc support is in
# the platform.
SERVICES=( systemd-hostnamed systemd-localed systemd-timedated timedatex )

for SERVICE in "${SERVICES[@]}"; do
	echo "==> Adding systemd overrides for: $SERVICE"
	OVERRIDE_DIR=$INSTALL_DIR/etc/systemd/system/${SERVICE}.service.d
	mkdir -p $OVERRIDE_DIR

	cat << OVERRIDE > ${OVERRIDE_DIR}/override.conf
[Service]
PrivateTmp=no
PrivateDevices=no
PrivateNetwork=no
ProtectSystem=no
ProtectHome=no
OVERRIDE
done

SERVICES=( httpd )

for SERVICE in "${SERVICES[@]}"; do
	echo "==> Adding systemd overrides for: $SERVICE"
	OVERRIDE_DIR=$INSTALL_DIR/etc/systemd/system/${SERVICE}.service.d
	mkdir -p $OVERRIDE_DIR

	cat << OVERRIDE > ${OVERRIDE_DIR}/override.conf
[Service]
PrivateTmp=no
OVERRIDE
done

echo "==> Disabling PasswordAuthentication"
echo "" >> $INSTALL_DIR/etc/ssh/sshd_config
echo "PasswordAuthentication no" >> $INSTALL_DIR/etc/ssh/sshd_config

echo "==> Enabling UsePrivilegeSeparation (default is 'sandbox')"
echo "UsePrivilegeSeparation yes" >> $INSTALL_DIR/etc/ssh/sshd_config


echo "==> Creating /etc/motd"
cat << MOTD > $INSTALL_DIR/etc/motd
   __        .                   .
 _|  |_      | .-. .  . .-. :--. |-
|_    _|     ;|   ||  |(.-' |  | |
  |__|   \`--'  \`-' \`;-| \`-' '  ' \`-'
                   /  ;  Instance ($NAME $BUILD_DATE)
                   \`-'   $DOCS

MOTD

echo "==> Creating /etc/product file"
cat << PRODUCT > $INSTALL_DIR/etc/product
Name: Joyent Instance
Image: $NAME $BUILD_DATE
Documentation: $DOCS
Description: $DESC
PRODUCT

echo "==> Installing Guest tools in $INSTALL_DIR"
echo "====> Initiallizing and fetching submodule $GUESTTOOLS"
git submodule init
git submodule update
echo "====> Running ./install.sh -i $INSTALL_DIR"
(
	cd $GUESTTOOLS
	./install.sh -i $INSTALL_DIR
)

echo "==> Saving installation as $TARGET. This may take a few minutes."
tar czf $TARGET --exclude-from=exclude.txt $INSTALL_DIR/

echo "==> Installation complete!"
echo "==> $TARGET"

exit 0
